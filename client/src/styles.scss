*,
*::before,
*::after {
	box-sizing: border-box;

	outline: none;
}

* {
  margin: 0;
  padding: 0;
}

body {
	scroll-behavior: smooth;

	text-rendering: optimizeSpeed;

	min-height: 100vh;

	overflow-x: hidden;

	font-family: Roboto, "Helvetica Neue", sans-serif;
}

a {
	color: inherit;

	text-decoration: none;
}

fieldset {
  border: none;
  padding: 0;
  margin: 0;
}

@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent: mat-palette($mat-amber);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);
$app-orange: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$candy-app-theme: mat-light-theme(
	(
		color: (
			primary: $candy-app-primary,
			accent: $candy-app-accent,
			warn: $candy-app-warn,
			progress: $app-orange
		)
	)
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
